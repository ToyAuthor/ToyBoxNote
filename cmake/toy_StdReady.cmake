
macro(toy_StdReady)
	if(NOT MSVC)
		if( TOY_RELEASE )
			set(CMAKE_C_FLAGS   "-O2 -Werror -Wall -Wextra")
			set(CMAKE_CXX_FLAGS "-O2 -Werror -Wall -Wextra")
		else()
			set(CMAKE_C_FLAGS   "-O2 -Werror -Wall -Wextra -g")
			set(CMAKE_CXX_FLAGS "-O2 -Werror -Wall -Wextra -g")
		endif()

		if(WIN32)
			set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
		else()
			set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
		endif()

		if(APPLE)
			add_definitions(-Qunused-arguments)
#		elseif(UNIX)
#			include_directories(/usr/include)

#			if(CMAKE_SIZEOF_VOID_P EQUAL 8)
#				link_directories(/usr/lib/x86_64-linux-gnu)
#			else()
#				link_directories(/usr/lib)
#			endif()
		endif()
	endif()
endmacro(toy_StdReady)
